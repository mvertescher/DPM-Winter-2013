package sensors;

import lejos.nxt.LightSensor;
import lejos.nxt.SensorPort;
import lejos.nxt.Sound;
import lejos.util.Timer;
import lejos.util.TimerListener;

/**
 * LightSensorTimer.java
 * Implements a timer listener implementation of the light sensor. 
 * @author mverte
 */
public class LightSensorTimer implements TimerListener, SensorTimer {
	
	private LightSensor ls; 
	private Timer lsTimer; 
	private int localizedValue, currentValue;
	private double X,Y;
	
	/**
	 * Constructor
	 * @param s
	 */
	public LightSensorTimer(SensorPort s, double x, double y) {
		this.ls = new LightSensor(s,true);
		this.lsTimer = new Timer(30, this);
		this.localizedValue = ls.readValue();
		this.X = x; 
		this.Y = y; 
	}

	/**
	 * Timer listener call
	 */
	@Override
	public void timedOut() {
		this.currentValue = ls.readValue();
		
	}
	
	/**
	 * Start the sensor timer
	 */
	public void startTimer() {
		lsTimer.start();
	}
	
	/**
	 * Stop the sensor timer
	 */
	public void stopTimer() {
		lsTimer.stop();
	}
	
	/**
	 * Returns the current light value
	 * @return
	 */
	public int getValue() {
		return this.currentValue;
	}
	
	public boolean lineHit() {
		if (this.localizedValue - this.currentValue > 5) {
			Sound.beep();
			return true;
		}	
		return false;
	}

	@Override
	public SensorID getSensorID() {
		return null;
	}
	
}
