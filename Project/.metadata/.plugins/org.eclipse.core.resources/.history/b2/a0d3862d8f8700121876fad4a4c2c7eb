package experimental;

import lejos.geom.Point;
import lejos.robotics.subsumption.Arbitrator;
import robot.Robot;

abstract class CricketBot {
	
	private Robot robot; 
	private Arbitrator arbitrator;
	
	public CricketBot(Robot r) {
		this.robot = r;
	}
	
	public void start() {
		arbitrator.start();
	}

	public Arbitrator getArbitrator() {
		return arbitrator;
	}

	public void setArbitrator(Arbitrator a) {
		this.arbitrator = a;
	}

	public void turnToPoint(double x, double y) {
		this.robot.turnToPoint(x,y);
	}

	public void stopMoving() {
		this.robot.stopMotors();
	}
	
	public boolean obstacleDetected() {
		return (robot.getLeftUltrasonicDistance() < 20);
	}

	public void moveToPoint(Point point) {
		this.robot.turnToPoint(point.getX(),point.getY());
		this.robot.moveForwardUntilStop();
		while (Math.abs(x - robot.getX()) > 1 || Math.abs(y - robot.getY()) > 1)  
			
		
	}
	
	public boolean notAtDestination() {
		return true;
	}
}
