package robot;

import lejos.nxt.Motor;
import lejos.nxt.NXTRegulatedMotor;
import lejos.nxt.SensorPort;

/**
 *  
 * Organizes the robotic constants. 
 * 
 * @author Matthew Vertescher
 *
 */
public class Constants {
	
	// r= 2.64
	// Patbot
	//public final static double LEFT_RADIUS = 2.70, RIGHT_RADIUS = 2.70, WIDTH = 16.1; //2.82,15.8 
	
	// FelizBot
	// Lowtherbot
	// Meowbot
	
	
	/**
	 * Final robot constants 
	 */
	public final static double LEFT_RADIUS = 2.62, RIGHT_RADIUS = 2.62, WIDTH = 16.33; 
	
	public final static NXTRegulatedMotor LEFT_MOTOR = Motor.B;
	public final static NXTRegulatedMotor RIGHT_MOTOR = Motor.A;
	public final static SensorPort US_LEFT = SensorPort.S2, US_RIGHT = SensorPort.S3, LIGHT_LEFT = SensorPort.S1, LIGHT_RIGHT = SensorPort.S4; 
	
	
	
	public NXTRegulatedMotor leftFlywheelMotor, rightFlywheelMotor;
	
	/**
	 * Range in centimeters that will signal that an object is directly in front of the robot
	 */
	public final static int OBSTACLE_DETECTION_RANGE = 18; // 12
	
	/**
	 * A simple threshold for the light sensor value
	 */
	public final static int NORMALIZED_LIGHT_VALUE_THRESHOLD = 480; //500 
	
	/**
	 * The x coordinate of the light sensors with respect to the robot's center
	 */
	public final static double LIGHT_SENSOR_X = 7.25;
	
	/**
	 * The y coordinate of the light sensors with respect to the robot's center
	 */
	public final static double LIGHT_SENSOR_Y = 5.25; //5.25 

	/**
	 * Difference between two light sensor values to detect a hit
	 */
	public static final int LIGHT_SENSOR_DIFFERENTIAL = 25; //25
	
	/**
	 * Error between two light sensor values to detect a hit
	 */
	public static final double LIGHT_SENSOR_ERROR = .15; //25
	
	/**
	 * The slow speed for the robot
	 */
	public static final int SLOW_SPEED = 50;
	
	/**
	 * The normal speed for the robot
	 */
	public static final int NORMAL_SPEED = 100;
	
	/**
	 * Fast speed
	 */
	public static final int FAST_SPEED = 200;
	
	/**
	 * Target X in cm
	 */
	public static final int TARGET_X = 150;
			
	/**
	 * Target Y in cm
	 */
	public static final int TARGET_Y = 300;	
	
	/**
	 * Light sensor period 
	 */
	public static final int LIGHT_SENSOR_PERIOD = 20;
	
	/**
	 * Odometry refresh period 
	 */
	public static final int ODOMETRY_PERIOD = 20;
	
	/**
	 * Odometry correction period
	 */
	public static final int CORRECTION_PERIOD = 30; // 20
	
	/**
	 * Ultrasonic sensor timer lister period
	 */
	public static final int ULTRASONIC_SENSOR_PERIOD = 150;
			
	
}
